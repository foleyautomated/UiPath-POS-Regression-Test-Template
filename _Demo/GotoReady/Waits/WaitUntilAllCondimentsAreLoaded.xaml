<Activity mc:Ignorable="sap sap2010" x:Class="WaitUntilAllCondimentsAreLoaded" this:WaitUntilAllCondimentsAreLoaded.in_NumberOfRetries="3" this:WaitUntilAllCondimentsAreLoaded.in_ContinueOnError="False" this:WaitUntilAllCondimentsAreLoaded.in_SecondsBetweenRetries="0.3" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_NumberOfRetries" Type="InArgument(x:Int32)" />
    <x:Property Name="in_ContinueOnError" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_SecondsBetweenRetries" Type="InArgument(x:Double)" />
    <x:Property Name="out_AllCondimentsAreLoaded" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1124,1207</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Template_WaitUntil" sap:VirtualizedContainerService.HintSize="600,1142" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="WaitUntilAllCondimentsAreLoaded.xaml" Name="XamlFileName" />
      <Variable x:TypeArguments="s:DateTime" Name="StartedAt">
        <Variable.Default>
          <CSharpValue x:TypeArguments="s:DateTime" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">DateTime.Now</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, ui:UiElement)" Name="CondimentElementsByName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Start" sap:VirtualizedContainerService.HintSize="538,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5" xml:space="preserve">XamlFileName + " ----&gt; Waiting... " + 
"SecondsBetweenRetries:[" + in_SecondsBetweenRetries.ToString() + "], " +
"NumberOfRetries:[" + in_NumberOfRetries.ToString() + "], " +
"ContinueOnError:[" + in_ContinueOnError.ToString() + "]"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:RetryScope sap2010:Annotation.AnnotationText="TODO: Check for a condition over and over until it is either met, or the workflow times out." DisplayName="Retry - Repeatedly Check For a Condition" sap:VirtualizedContainerService.HintSize="538,666" sap2010:WorkflowViewState.IdRef="RetryScope_1">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Check Some Condition" sap:VirtualizedContainerService.HintSize="496,346" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FindAllCondiments.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="_Demo\\GotoReady\\Finds\\FindDesiredCondiments.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ContinueOnError">
                  <Literal x:TypeArguments="x:Boolean" />
                </InArgument>
                <InArgument x:TypeArguments="x:Double" x:Key="in_TimeoutSeconds">
                  <Literal x:TypeArguments="x:Double" Value="2" />
                </InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_DesiredCondimentOptions">
                  <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40" xml:space="preserve">new string[] {
"DavidsCheese",
"DavidsKetchup",
"DavidsRelish",
"DavidsMustard",
"DavidsBbq",
"DavidsBananaPeppers",
"DavidsPickledRedOnion",
"DavidsPineapples",
"DavidsJalapeno",
"DavidsSpecialSauce"
}</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:UiElement)" x:Key="out_DesiredCondimentElementsByName">
                  <CSharpReference x:TypeArguments="scg:Dictionary(x:String, ui:UiElement)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">CondimentElementsByName</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="All Condiments Loaded?" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">out_AllCondimentsAreLoaded</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">CondimentElementsByName.Keys.Count() == 10</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <ui:CheckTrue DisplayName="Check True - Condition" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="CheckTrue_1">
            <ui:CheckTrue.ErrorMessage>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">XamlFileName + "==&gt; Timeout while Waiting for Condiments to load"</CSharpValue>
              </InArgument>
            </ui:CheckTrue.ErrorMessage>
            <ui:CheckTrue.Expression>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">out_AllCondimentsAreLoaded</CSharpValue>
              </InArgument>
            </ui:CheckTrue.Expression>
          </ui:CheckTrue>
        </ActivityFunc>
      </ui:RetryScope.Condition>
      <ui:RetryScope.ContinueOnError>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">in_ContinueOnError</CSharpValue>
        </InArgument>
      </ui:RetryScope.ContinueOnError>
      <ui:RetryScope.NumberOfRetries>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">in_NumberOfRetries</CSharpValue>
        </InArgument>
      </ui:RetryScope.NumberOfRetries>
      <ui:RetryScope.RetryInterval>
        <InArgument x:TypeArguments="x:TimeSpan">
          <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">TimeSpan.FromSeconds(in_SecondsBetweenRetries)</CSharpValue>
        </InArgument>
      </ui:RetryScope.RetryInterval>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <ui:LogMessage DisplayName="Log Finish + Duration" sap:VirtualizedContainerService.HintSize="538,143.6" sap2010:WorkflowViewState.IdRef="LogMessage_4">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12" xml:space="preserve">XamlFileName + " ----&gt; Wait Result: [" + out_AllCondimentsAreLoaded.ToString() + "]" +
" ("  + Math. Round((DateTime.Now - StartedAt).TotalMilliseconds/1000, 2).ToString() + " seconds)"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>